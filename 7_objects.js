
// üìå –û–±—ä–µ–∫—Ç—ã –≤ JavaScript

//===============================================================================================//
// üîπ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤

// üìå –°–∏–Ω—Ç–∞–∫—Å–∏—Å:
const obj1 = {}; // –õ–∏—Ç–µ—Ä–∞–ª –æ–±—ä–µ–∫—Ç–∞ (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±)
const obj2 = new Object(); // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–±—ä–µ–∫—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–¥–∫–æ)

// üìå –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å –∫–ª—é—á–∞–º–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
const person = {
    // –∫–ª—é—á: –∑–Ω–∞—á–µ–Ω–∏–µ
    name: "Tom",
    age: 30,
};

console.log(person.name); // "Tom"

//===============================================================================================//
// üîπ –î–æ—Å—Ç—É–ø –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞

// üìå –ß–µ—Ä–µ–∑ —Ç–æ—á–∫—É `.`
person.age = 31; // –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞
console.log(person.age); // 31

// üìå –ß–µ—Ä–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ `[]`
console.log(person["name"]); // "Tom"

const prop = "myKey";
const obj = {
    name: "Tom",
    age: 25,
    interest: "football",
    "his father": "Dan",
    [prop]: "value",
};

console.log(obj["his father"]); // "Dan"
console.log(obj.myKey); // "value"

//===============================================================================================//
// üîπ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –≤ –æ–±—ä–µ–∫—Ç

// üìå –§—É–Ω–∫—Ü–∏—è `transformObject` –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤ –æ–±—ä–µ–∫—Ç, –≥–¥–µ —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫–ª—é—á–æ–º –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º
const transformObject = (arr) => {
    let obj = {};
    arr.forEach((el) => (obj[el] = el));
    return obj;
};

const arr = [1, "text"];
console.log(transformObject(arr)); // { '1': 1, text: 'text' }

//===============================================================================================//
// üîπ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤

const a = {};
const b = {};
console.log(a === b); // false (—Ä–∞–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏)

const c = {};
const d = c;
console.log(c === d); // true (–æ–¥–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –æ–±—ä–µ–∫—Ç)

//===============================================================================================//
// üîπ –°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤

const username = "Tom";

const user = {
    username, // –∞–Ω–∞–ª–æ–≥ `username: username`
};

console.log(user.username); // "Tom"

//===============================================================================================//
// üîπ –ü–µ—Ä–µ–±–æ—Ä —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞

const userInfo = {
    name: "Tom",
    key: 17,
};

// üìå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `for...in` –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ —Å–≤–æ–π—Å—Ç–≤
for (let key in userInfo) {
    console.log(userInfo[key]);
}

// üìå –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π
const concatProps = (obj) => {
    const arr = [];
    for (let key in obj) {
        arr.push(obj[key]);
    }
    return arr;
};

console.log(concatProps(userInfo)); // ["Tom", 17]

//===============================================================================================//
// üéØ –ò—Ç–æ–≥:
// ‚úÖ –û–±—ä–µ–∫—Ç—ã —Ö—Ä–∞–Ω—è—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ".
// ‚úÖ –ú–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º —á–µ—Ä–µ–∑ `.`, `[]`, –∞ —Ç–∞–∫–∂–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏.
// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `for...in` –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –∫–ª—é—á–µ–π –æ–±—ä–µ–∫—Ç–∞.
// ‚úÖ `transformObject()` –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞.
