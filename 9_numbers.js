// –ß–∏—Å–ª–∞

//===============================================================================================//

/* 
    const price = 5.95
    const amount = 3
    const total = 5.95 * 3 // 17.85

    const a = Infinity
    const b = -Infinity
    const c = NaN
    const d = -0
    const e = 0 

    const hexNumber = 0x11 // 17
    const octalNumber = 0o11 // 9
    const binaryNumber = 0b11 // 3

    const distance = 1.7e5 // 170000
    const space = 1.7e-5 // 0.000017
*/

//===============================================================================================//

// –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∏—Å–ª–∞–º–∏

/* 
    –£–Ω–∞—Ä–Ω—ã–π –ø–ª—é—Å –ø—Ä–∏–≤–æ–¥–∏—Ç –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫ —á–∏—Å–ª—É
    typeof +'17' // 'number'

    –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∏—Å–ª–∞–º–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –¥—Ä—É–≥–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫ —á–∏—Å–ª–∞–º
    17 - '1' // 16

    –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è –ø—Ä–∏–≤–µ—Å—Ç–∏ —É —á–∏—Å–ª—É –≤–µ—Ä–Ω—É—Ç NaN
    17 - undefined // NaN
*/

//===============================================================================================//

// –ú–µ—Ç–æ–¥—ã

// console.log(Number.isNaN('text')) // false
// console.log(isNaN('text')) // true
// console.log(isNaN(NaN)) // true
// console.log(Number.isNaN(NaN)) // true

// console.log(Number.isFinite('17')) // false
// console.log(isFinite('17')) // true

// console.log(parseInt(' 17.17text')) // 17
// console.log(Number.parseInt(' 17.17text')) // 17
// console.log(Number.parseInt('seventeen')) // NaN

// console.log(parseFloat(' 17.17text')) // 17.17
// console.log(Number.parseFloat(' 17.17text')) // 17.17
// console.log(Number.parseFloat('seventeen')) // NaN

// console.log(Number.isInteger(17)) // true
// console.log(Number.isInteger(17.0)) // true
// console.log(Number.isInteger(17.17)) // false
// console.log(Number.isInteger('17')) // false
// console.log(Number.isInteger(Infinity)) // false
// console.log(Number.isInteger(NaN)) // false
// console.log(Number.isInteger(undefined)) // false
// console.log(Number.isInteger(null)) // false


// const parseArray = arr => arr
//     .map(el => Number.parseFloat(el))

// const elementList = [4, 5.6, '   5.7kl', null, NaN, Infinity, undefined]
// console.log(parseArray(elementList))

/*
    –í JavaScript (–∫–∞–∫ –∏ –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è) —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ IEEE 754, 
    –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–≤–æ–∏—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∏—Å–µ–ª. –û–¥–Ω–∞–∫–æ –Ω–µ –≤—Å–µ –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ—á–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω—ã –≤ 
    –¥–≤–æ–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–µ–±–æ–ª—å—à–∏–º –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç—è–º –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
*/

// console.log(0.1 + 0.2) // 0.30000000000000004

// –î–≤–æ–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —á–∏—Å–µ–ª –ß–∏—Å–ª–∞ 0.1 –∏ 0.2 –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ—á–Ω–æ –≤—ã—Ä–∞–∂–µ–Ω—ã –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ. 
// –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–µ—Å—è—Ç–∏—á–Ω–æ–µ —á–∏—Å–ª–æ 0.1 –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞—è –¥—Ä–æ–±—å:
// 0.1 (–¥–µ—Å—è—Ç–∏—á–Ω–æ–µ) = 0.00011001100110011001100110011001100... (–¥–≤–æ–∏—á–Ω–æ–µ)

// –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:

// –ú–µ—Ç–æ–¥ .toFixed(n): –æ–∫—Ä—É–≥–ª—è–µ—Ç —á–∏—Å–ª–æ –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:
// console.log((0.1 + 0.2).toFixed(1)) // 0.3

// –ú–µ—Ç–æ–¥ Number.EPSILON: –ø–æ–º–æ–≥–∞–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –ø—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —á–∏—Å–µ–ª:
// console.log(Math.abs((0.1 + 0.2) - 0.3) < Number.EPSILON) // true

// –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ—á–Ω–æ–π –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–æ–π: –Ω–∞–ø—Ä–∏–º–µ—Ä, big.js –∏–ª–∏ decimal.js

//===============================================================================================//

// –û–±—ä–µ–∫—Ç Math

// console.log(Math.ceil(17.17))
// console.log(Math.floor(17.71))
// console.log(Math.round(-17.5))
// console.log(Math.trunc(-17.5))
// console.log(Math.abs(-17)) // 17 (–∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞)
// console.log(Math.max(5, 7, 17, 1))
// console.log(Math.min(6, 7, 1, -4))
// console.log(Math.pow(3, 4)) // 81 (–≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å) 
// console.log(Math.sqrt(9)) // 3

/* 
    Math.E	‚âà 2.718281828459045	–ß–∏—Å–ª–æ –≠–π–ª–µ—Ä–∞ (–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –ª–æ–≥–∞—Ä–∏—Ñ–º–∞)
    Math.PI	‚âà 3.141592653589793	–ß–∏—Å–ª–æ –ü–∏ (–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∫ –µ—ë –¥–∏–∞–º–µ—Ç—Ä—É)
    Math.SQRT2	‚âà 1.4142135623730951	–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ 2
    Math.SQRT1_2	‚âà 0.7071067811865476	–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ 1/2
    Math.LN2	‚âà 0.6931471805599453	–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ª–æ–≥–∞—Ä–∏—Ñ–º —á–∏—Å–ª–∞ 2
    Math.LN10	‚âà 2.302585092994046	–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ª–æ–≥–∞—Ä–∏—Ñ–º —á–∏—Å–ª–∞ 10
    Math.LOG2E	‚âà 1.4426950408889634	–î–≤–æ–∏—á–Ω—ã–π –ª–æ–≥–∞—Ä–∏—Ñ–º —á–∏—Å–ª–∞ e
    Math.LOG10E	‚âà 0.4342944819032518	–î–µ—Å—è—Ç–∏—á–Ω—ã–π –ª–æ–≥–∞—Ä–∏—Ñ–º —á–∏—Å–ª–∞ e
*/
// –≠—Ç–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö JavaScript. –ù–∞–ø—Ä–∏–º–µ—Ä:
// console.log(Math.PI); // 3.141592653589793
// console.log(Math.sqrt(16)); // 4
// console.log(Math.log(Math.E)); // 1

//===============================================================================================//

// –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ

// –î–æ —Ü–µ–ª–æ–≥–æ:
// Math.ceil(17.17)
// Math.floor(17.71)
// Math.round(-17.5)
// Math.trunc(-17.5)

// –î–æ n-–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
// 1 –£–º–Ω–æ–∂–∏—Ç—å –∏ –ø–æ—Ç–æ–º —Ä–∞–∑–¥–µ–ª–∏—Ç—å
// Math.PI // 3.141592653589793
// Math.round((Math.PI * 1000)) / 1000 // 3.142

// 2 .toFixed(n)
// Math.PI.toFixed(3) // "3.142" (–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É)

// const multiRound = num =>
//     [
//      Math.round(num), 
//      Math.floor(num), 
//      Math.ceil(num), 
//      Math.trunc(num),
//     ]

// console.log(multiRound(17.1))


// const multiRound = num =>
//     [
//      Math.round(num * 100) / 100, 
//      Math.floor(num * 100) / 100, 
//      Math.ceil(num * 100) / 100, 
//      Math.trunc(num * 100) / 100,
//      num.toFixed(2)
//     ]

// console.log(multiRound(Math.PI))

//===============================================================================================//

// –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —á–∏—Å–ª–∞

/* 
    –í JavaScript –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —á–∏—Å–ª–∞ ‚Äî —ç—Ç–æ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–æ—á–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞ —Ç–∏–ø–∞ Number, 
    –Ω–µ —Ç–µ—Ä—è—è —Ç–æ—á–Ω–æ—Å—Ç–∏. –î–∏–∞–ø–∞–∑–æ–Ω –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —á–∏—Å–µ–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –æ—Ç -2 –≤ 53 —Å—Ç–µ–ø–µ–Ω–∏ +1 –¥–æ 2 –≤ 53 —Å—Ç–µ–ø–µ–Ω–∏ -1, 
    —Ç–∞–∫ –∫–∞–∫ –≤ JavaScript —á–∏—Å–ª–∞ —Ç–∏–ø–∞ Number –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É IEEE 754.
*/

// –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–æ Number.isSafeInteger()
// console.log(Number.isSafeInteger(9007199254740991)); // true
// console.log(Number.isSafeInteger(9007199254740992)); // false

// –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —á–∏—Å–ª–∞–º–∏, –≤—ã—Ö–æ–¥—è—â–∏–º–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, 
// —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö BigInt, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —á–∏—Å–ª–∞–º–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏:
// const bigNumber = BigInt("9007199254740993");
// console.log(bigNumber + 2n); // 9007199254740995n

/* 
    –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —á–∏—Å–ª–∞ –≤–∞–∂–Ω—ã, –∫–æ–≥–¥–∞ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ä–∞—Å—á–µ—Ç–∞–º–∏ –∏–ª–∏ –¥–∞–Ω–Ω—ã–º–∏, 
    –≥–¥–µ —Ç–æ—á–Ω–æ—Å—Ç—å –∏–º–µ–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö.
*/



















// function findAverage(array) {
//     let sum = 0
//     for(let i = 0; i < array.length; i++) {
//         sum += array[i] / array.length
//     }
//     return sum
// }

// const findAverage = array => {
//     return array.reduce((acc, num) => acc + num / array.length, 0)
// }
    
// const array = ['1', '2', '3', '4', '5']
// console.log(findAverage(array))

































// üìå –ß–∏—Å–ª–∞ –≤ JavaScript

//===============================================================================================//
// üîπ –û—Å–Ω–æ–≤–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

const price = 5.95;
const amount = 3;
const total = price * amount; // 17.85

const a = Infinity;
const b = -Infinity;
const c = NaN;
const d = -0;
const e = 0;

// üìå –†–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∑–∞–ø–∏—Å–∏ —á–∏—Å–µ–ª
const hexNumber = 0x11; // 17 (—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω–æ–µ)
const octalNumber = 0o11; // 9 (–≤–æ—Å—å–º–µ—Ä–∏—á–Ω–æ–µ)
const binaryNumber = 0b11; // 3 (–¥–≤–æ–∏—á–Ω–æ–µ)

const distance = 1.7e5; // 170000 (—ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–ø–∏—Å—å)
const space = 1.7e-5; // 0.000017

//===============================================================================================//
// üîπ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å —á–∏—Å–ª–∞–º–∏

console.log(typeof +"17"); // number (—É–Ω–∞—Ä–Ω—ã–π –ø–ª—é—Å)
console.log(17 - "1"); // 16 (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤)
console.log(17 - undefined); // NaN (–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —á–∏—Å–ª—É)

//===============================================================================================//
// üîπ –ú–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç—ã —Å —á–∏—Å–ª–∞–º–∏

console.log(Number.isNaN("text")); // false
console.log(isNaN("text")); // true (–≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
console.log(Number.isNaN(NaN)); // true

console.log(Number.isFinite("17")); // false
console.log(isFinite("17")); // true

console.log(Number.parseInt(" 17.17text")); // 17
console.log(Number.parseFloat(" 17.17text")); // 17.17

console.log(Number.isInteger(17)); // true
console.log(Number.isInteger(17.17)); // false

// üìå –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –≤ —á–∏—Å–ª–∞
const elementList = [4, 5.6, "   5.7kl", null, NaN, Infinity, undefined];
const parseArray = (arr) => arr.map((el) => Number.parseFloat(el));

console.log(parseArray(elementList));

//===============================================================================================//
// üîπ –û—à–∏–±–∫–∏ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –≤ JavaScript

console.log(0.1 + 0.2); // 0.30000000000000004 (–æ—à–∏–±–∫–∞ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è)

// üìå –†–µ—à–µ–Ω–∏—è:
console.log((0.1 + 0.2).toFixed(1)); // "0.3" (–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ç—Ä–æ–∫–∞)
console.log(Math.abs((0.1 + 0.2) - 0.3) < Number.EPSILON); // true

//===============================================================================================//
// üîπ –û–±—ä–µ–∫—Ç Math

console.log(Math.ceil(17.17)); // 18 (–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö)
console.log(Math.floor(17.71)); // 17 (–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤–Ω–∏–∑)
console.log(Math.round(17.5)); // 18 (–æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫ –±–ª–∏–∂–∞–π—à–µ–º—É)
console.log(Math.trunc(-17.5)); // -17 (–æ—Ç–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏)
console.log(Math.abs(-17)); // 17 (–º–æ–¥—É–ª—å —á–∏—Å–ª–∞)

console.log(Math.pow(3, 4)); // 81 (–≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å)
console.log(Math.sqrt(9)); // 3 (–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å)

console.log(Math.max(5, 7, 17, 1)); // 17 (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)
console.log(Math.min(6, 7, 1, -4)); // -4 (–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)

//===============================================================================================//
// üîπ –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ —á–∏—Å–µ–ª

// üìå –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ —Ü–µ–ª–æ–≥–æ
console.log(Math.round(17.7)); // 18
console.log(Math.floor(17.7)); // 17
console.log(Math.ceil(17.7)); // 18
console.log(Math.trunc(17.7)); // 17

// üìå –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ n-–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
console.log(Math.PI.toFixed(3)); // "3.142" (—Å—Ç—Ä–æ–∫–∞)
console.log(Math.round(Math.PI * 1000) / 1000); // 3.142 (—á–∏—Å–ª–æ)

// üìå –§—É–Ω–∫—Ü–∏—è –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è —Ä–∞–∑–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
const multiRound = (num) => [
    Math.round(num),
    Math.floor(num),
    Math.ceil(num),
    Math.trunc(num),
    Math.round(num * 100) / 100,
];

console.log(multiRound(Math.PI)); // [3, 3, 4, 3, 3.14]

//===============================================================================================//
// üîπ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —á–∏—Å–ª–∞ –∏ BigInt

console.log(Number.isSafeInteger(9007199254740991)); // true
console.log(Number.isSafeInteger(9007199254740992)); // false

// üìå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BigInt
const bigNumber = BigInt("9007199254740993");
console.log(bigNumber + 2n); // 9007199254740995n

//===============================================================================================//
// üéØ –ò—Ç–æ–≥:
// ‚úÖ –ß–∏—Å–ª–∞ –≤ JavaScript –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ IEEE 754.
// ‚úÖ `Math` —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ–∑–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.
// ‚úÖ **BigInt** –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ–ª—å—à–∏–º–∏ —á–∏—Å–ª–∞–º–∏.
// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `Number.EPSILON` –¥–ª—è —Ç–æ—á–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π, –∏–∑–±–µ–≥–∞—è –æ—à–∏–±–æ–∫ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è.
