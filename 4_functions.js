// –§—É–Ω–∫—Ü–∏–∏

//===============================================================================================//

// Function Declaration
/*
    function –∏–º—è–§—É–Ω–∫—Ü–∏–∏(–∞—Ä–≥—É–º–µ–Ω—Ç—ã, —á–µ—Ä–µ–∑, –∑–∞–ø—è—Ç—É—é) {
        '—Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏'
    }

    –∏–º—è–§—É–Ω–∫—Ü–∏–∏() // –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
*/ 

// function getSum(a, b) {
//     console.log(a + b)
// }

// getSum(1, 3)

// function sayHi(name) {
//     const greeting = `Hi, ${name}`
//     console.log(greeting)
// }

// sayHi('John')

// –ê—Ä–≥—É–º–µ–Ω—Ç arguments –≤—Å—Ç–æ—Ä–æ–µ–Ω –≤ js
// –ê—Ä–≥—É–º–µ–Ω—Ç–∞–º –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã name = 'anonymous'

// return statement
// function getEvenOdd(num) {
//     if (num % 2 === 0) {
//         return 'even'
//     } else {
//         return 'odd'
//     }
// }

// const result = getEvenOdd(5)
// –µ—Å–ª–∏ return –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç undefined

//===============================================================================================//

// Function Expression
// –§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –µ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏—è
// const getSum = function(a, b) {
//     return a + b
// }

// console.log(getSum(20, 5))

//===============================================================================================//

// Arrow function

// const getSquare = (num) => {
//     return num * num
// }

// –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç, —Ç–æ —Å–∫–æ–±–∫–∏ –º–æ–∂–Ω–æ –Ω–µ –ø–∏—Å–∞—Ç—å
// –µ—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –µ—ë –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
// –±–µ–∑ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫ –∏ return
// const getSquare = num => num * num

// console.log(getSquare(5))

/*
    -–§—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    -–ú–æ–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ –¥—Ä—É–≥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    -–•—Ä–∞–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö 
    -–•—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–∞—Ö —ç–ª–µ–º–µ–Ω—Ç–∞
*/ 

// Function expression –ù–ï–õ–¨–ó–Ø –≤—ã–∑—ã–≤–∞—Ç—å –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
// const message = 'Just learn it!'
// const sendMessage = (name) => {
//     const sender = 'Gromocode'
//     console.log(`${name}, ${message}, You ${sender}`)
// }
// sendMessage('Tom')

// Function declaration –ú–û–ñ–ù–û
// const message = 'Just learn it!'
// sendMessage('Tom')
// function sendMessage(name) {
//     const sender = 'Gromocode'
//     console.log(`${name}, ${message}, You ${sender}`)
// }

//===============================================================================================//

// Counter

// const makeCounter = () => {
//     let count = 0
//     return function() {
//         return count++
//     }
// }

// const counter1 = makeCounter()
// const counter2 = makeCounter()

// console.log(counter1()) // 0
// console.log(counter1()) // 1
// console.log(counter1()) // 2
// console.log(counter1()) // 3

// console.log(counter2()) // 0
// console.log(counter2()) // 1

//===============================================================================================//

/* 
    –§–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ –∑–∞–¥–∞—é—Ç Lexical Environment(–õ–µ–∫—Å–∏—á–µ—Å–∫–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ)

    –ù–æ–≤—ã–π Lexical Environment —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏

    –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è - —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞, 
    —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —Ç–µ–∫—É—â–∏–º –≤—ã–ø–æ–ª–Ω—è—é—â–∏–º—Å—è –±–ª–æ–∫–æ–º, —Ñ—É–Ω–∫—Ü–∏–µ–π –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç–æ–º.

    –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π Lexical Environment –≤ –º–æ–º–µ–Ω—Ç
    —Å–æ–∑–¥–∞–Ω–∏—è

    –û–±—Ä–∞—Ç–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –≤–∏–¥–Ω—ã

    –ó–∞–º—ã–∫–∞–Ω–∏–µ - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∏ –≤—Å–µ –≤–Ω–µ—à–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –µ–π –¥–æ—Å—Ç—É–ø–Ω—ã
*/









































































































// üìå –§—É–Ω–∫—Ü–∏–∏ –≤ JavaScript

//===============================================================================================//
// üîπ Function Declaration (–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏)
// –§—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å **–¥–æ –µ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏—è** –±–ª–∞–≥–æ–¥–∞—Ä—è –º–µ—Ö–∞–Ω–∏–∑–º—É "hoisting".

function getSum(a, b) {
    return a + b;
}

console.log(getSum(1, 3)); // 4

function sayHi(name = 'Anonymous') {  // –ú–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    console.log(`Hi, ${name}`);
}

sayHi('John'); // "Hi, John"
sayHi();       // "Hi, Anonymous"

// üìå –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (return)
function getEvenOdd(num) {
    return num % 2 === 0 ? 'even' : 'odd';
}

console.log(getEvenOdd(5)); // "odd"

// –ï—Å–ª–∏ return –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω–µ—Ç undefined
function noReturnExample() {
    console.log("–ü—Ä–æ—Å—Ç–æ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–¥");
}
console.log(noReturnExample()); // undefined

//===============================================================================================//
// üîπ Function Expression (–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ)
// –§—É–Ω–∫—Ü–∏—è **–Ω–µ–ª—å–∑—è** –≤—ã–∑–≤–∞—Ç—å –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

const getDifference = function(a, b) {
    return a - b;
};

console.log(getDifference(10, 3)); // 7

//===============================================================================================//
// üîπ Arrow Function (–°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏)
// –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ—É–Ω–∫—Ü–∏–π.

const getSquare = num => num * num;
console.log(getSquare(5)); // 25

// –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø—É—Å—Ç—ã–µ —Å–∫–æ–±–∫–∏:
const greet = () => 'Hello, world!';
console.log(greet()); // "Hello, world!"

// –ï—Å–ª–∏ —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—ã—Ä–∞–∂–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏:
const getProduct = (a, b) => {
    console.log(`–£–º–Ω–æ–∂–∞–µ–º ${a} –Ω–∞ ${b}`);
    return a * b;
};

console.log(getProduct(3, 4)); // 12

// üìå –°—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ **–Ω–µ –∏–º–µ—é—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ this**
const user = {
    name: 'Alice',
    greet: function() {
        console.log(`Hi, I'm ${this.name}`); // –†–∞–±–æ—Ç–∞–µ—Ç, —Ç.–∫. –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    },
    sayHello: () => {
        console.log(`Hello, I'm ${this.name}`); // ‚ùå this –∑–¥–µ—Å—å –≤–µ–¥–µ—Ç —Å–µ–±—è –∏–Ω–∞—á–µ
    }
};

user.greet(); // "Hi, I'm Alice"
user.sayHello(); // "Hello, I'm undefined"

//===============================================================================================//
// üîπ –§—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π

// –§—É–Ω–∫—Ü–∏—è –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
const operate = (num1, num2, operation) => operation(num1, num2);

console.log(operate(10, 5, getSum)); // 15
console.log(operate(10, 5, getDifference)); // 5

// –§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é
const createMultiplier = multiplier => num => num * multiplier;

const double = createMultiplier(2);
const triple = createMultiplier(3);

console.log(double(5)); // 10
console.log(triple(5)); // 15

//===============================================================================================//
// üîπ –ó–∞–º—ã–∫–∞–Ω–∏–µ (Closure)
// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏, –¥–∞–∂–µ –µ—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.

const makeCounter = () => {
    let count = 0;
    return () => count++;
};

const counter1 = makeCounter();
const counter2 = makeCounter();

console.log(counter1()); // 0
console.log(counter1()); // 1
console.log(counter1()); // 2

console.log(counter2()); // 0
console.log(counter2()); // 1

//===============================================================================================//
// üéØ –ò—Ç–æ–≥:
// ‚úÖ Function Declaration - –º–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç hoisting.
// ‚úÖ Function Expression - —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –Ω–µ–ª—å–∑—è –≤—ã–∑–≤–∞—Ç—å –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.
// ‚úÖ Arrow Function - —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –Ω–µ –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ this.
// ‚úÖ –§—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏–∑ –¥—Ä—É–≥–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∑–∞–º—ã–∫–∞–Ω–∏—è—Ö.

